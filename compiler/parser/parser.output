Terminals unused in grammar

   "writeChar"


State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: program T_eof

    1 program: func_def

    2 func_def: header local_def_gen block

    3 local_def_gen: /* empty */
    4              | local_def local_def_gen

    5 header: "fun" T_id '(' ')' ':' ret_type
    6       | "fun" T_id '(' fpar_def fpar_def_gen ')' ':' ret_type

    7 fpar_def_gen: /* empty */
    8             | ';' fpar_def fpar_def_gen

    9 fpar_def: "ref" T_id comma_id_gen ':' fpar_type
   10         | T_id comma_id_gen ':' fpar_type

   11 comma_id_gen: /* empty */
   12             | ',' T_id comma_id_gen

   13 data_type: "int"
   14          | "char"

   15 type: data_type type_gen

   16 type_gen: /* empty */
   17         | '[' "const_int" ']' type_gen

   18 ret_type: data_type
   19         | "nothing"

   20 fpar_type: data_type '[' ']' type_gen
   21          | data_type type_gen

   22 local_def: func_def
   23          | func_decl
   24          | var_def

   25 func_decl: header ';'

   26 var_def: "var" T_id comma_id_gen ':' type ';'

   27 stmt: ';'
   28     | l_value "<-" expr ';'
   29     | block
   30     | func_call_stmt ';'
   31     | "if" cond "then" stmt
   32     | "if" cond "then" stmt "else" stmt
   33     | "while" cond "do" stmt
   34     | "return" ';'
   35     | "return" expr ';'
   36     | "writeInteger" '(' T_id ')' ';'
   37     | "writeInteger" '(' "const_int" ')' ';'
   38     | "writeString" '(' T_id ')' ';'
   39     | "writeString" '(' T_const_string ')' ';'

   40 block: '{' stmt_list '}'

   41 stmt_list: /* empty */
   42          | stmt_list stmt

   43 func_call_stmt: T_id '(' ')'
   44               | T_id '(' expr comma_expr_gen ')'

   45 func_call_expr: T_id '(' ')'
   46               | T_id '(' expr comma_expr_gen ')'

   47 comma_expr_gen: /* empty */
   48               | ',' expr comma_expr_gen

   49 l_value: T_id
   50        | T_const_string
   51        | l_value '[' expr ']'

   52 expr: "const_int"
   53     | T_const_char
   54     | l_value
   55     | expr_high
   56     | func_call_expr
   57     | expr '+' expr
   58     | expr '-' expr
   59     | expr '*' expr
   60     | expr "div" expr
   61     | expr "mod" expr

   62 expr_high: '(' expr ')'
   63          | '+' expr
   64          | '-' expr

   65 cond: cond_high
   66     | cond "and" cond
   67     | cond "or" cond
   68     | expr '=' expr
   69     | expr '#' expr
   70     | expr '>' expr
   71     | expr '<' expr
   72     | expr ">=" expr
   73     | expr "<=" expr

   74 cond_high: '(' cond ')'
   75          | "not" cond


Terminals, with rules where they appear

T_eof (0) 0
'#' (35) 69
'(' (40) 5 6 36 37 38 39 43 44 45 46 62 74
')' (41) 5 6 36 37 38 39 43 44 45 46 62 74
'*' (42) 59
'+' (43) 57 63
',' (44) 12 48
'-' (45) 58 64
':' (58) 5 6 9 10 26
';' (59) 8 25 26 27 28 30 34 35 36 37 38 39
'<' (60) 71
'=' (61) 68
'>' (62) 70
'[' (91) 17 20 51
']' (93) 17 20 51
'{' (123) 40
'}' (125) 40
error (256)
"and" (258) 66
"char" (259) 14
"div" (260) 60
"do" (261) 33
"else" (262) 32
"fun" (263) 5 6
"if" (264) 31 32
"int" (265) 13
"mod" (266) 61
"not" (267) 75
"nothing" (268) 19
"or" (269) 67
"ref" (270) 9
"return" (271) 34 35
"then" (272) 31 32
"var" (273) 26
"while" (274) 33
"writeInteger" (275) 36 37
"writeChar" (276)
"writeString" (277) 38 39
T_id (278) 5 6 9 10 12 26 36 38 43 44 45 46 49
"const_int" (279) 17 37 52
T_const_char (280) 53
T_const_string (281) 39 50
">=" (282) 72
"<=" (283) 73
"<-" (284) 28


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
func_def (48)
    on left: 2, on right: 1 22
local_def_gen (49)
    on left: 3 4, on right: 2 4
header (50)
    on left: 5 6, on right: 2 25
fpar_def_gen (51)
    on left: 7 8, on right: 6 8
fpar_def (52)
    on left: 9 10, on right: 6 8
comma_id_gen (53)
    on left: 11 12, on right: 9 10 12 26
data_type (54)
    on left: 13 14, on right: 15 18 20 21
type (55)
    on left: 15, on right: 26
type_gen (56)
    on left: 16 17, on right: 15 17 20 21
ret_type (57)
    on left: 18 19, on right: 5 6
fpar_type (58)
    on left: 20 21, on right: 9 10
local_def (59)
    on left: 22 23 24, on right: 4
func_decl (60)
    on left: 25, on right: 23
var_def (61)
    on left: 26, on right: 24
stmt (62)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39, on right: 31 32
    33 42
block (63)
    on left: 40, on right: 2 29
stmt_list (64)
    on left: 41 42, on right: 40 42
func_call_stmt (65)
    on left: 43 44, on right: 30
func_call_expr (66)
    on left: 45 46, on right: 56
comma_expr_gen (67)
    on left: 47 48, on right: 44 46 48
l_value (68)
    on left: 49 50 51, on right: 28 51 54
expr (69)
    on left: 52 53 54 55 56 57 58 59 60 61, on right: 28 35 44 46 48
    51 57 58 59 60 61 62 63 64 68 69 70 71 72 73
expr_high (70)
    on left: 62 63 64, on right: 55
cond (71)
    on left: 65 66 67 68 69 70 71 72 73, on right: 31 32 33 66 67 74
    75
cond_high (72)
    on left: 74 75, on right: 65


state 0

    0 $accept: . program T_eof

    "fun"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3
    header    go to state 4


state 1

    5 header: "fun" . T_id '(' ')' ':' ret_type
    6       | "fun" . T_id '(' fpar_def fpar_def_gen ')' ':' ret_type

    T_id  shift, and go to state 5


state 2

    0 $accept: program . T_eof

    T_eof  shift, and go to state 6


state 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


state 4

    2 func_def: header . local_def_gen block

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7

    $default  reduce using rule 3 (local_def_gen)

    func_def       go to state 8
    local_def_gen  go to state 9
    header         go to state 10
    local_def      go to state 11
    func_decl      go to state 12
    var_def        go to state 13


state 5

    5 header: "fun" T_id . '(' ')' ':' ret_type
    6       | "fun" T_id . '(' fpar_def fpar_def_gen ')' ':' ret_type

    '('  shift, and go to state 14


state 6

    0 $accept: program T_eof .

    $default  accept


state 7

   26 var_def: "var" . T_id comma_id_gen ':' type ';'

    T_id  shift, and go to state 15


state 8

   22 local_def: func_def .

    $default  reduce using rule 22 (local_def)


state 9

    2 func_def: header local_def_gen . block

    '{'  shift, and go to state 16

    block  go to state 17


state 10

    2 func_def: header . local_def_gen block
   25 func_decl: header . ';'

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7
    ';'    shift, and go to state 18

    $default  reduce using rule 3 (local_def_gen)

    func_def       go to state 8
    local_def_gen  go to state 9
    header         go to state 10
    local_def      go to state 11
    func_decl      go to state 12
    var_def        go to state 13


state 11

    4 local_def_gen: local_def . local_def_gen

    "fun"  shift, and go to state 1
    "var"  shift, and go to state 7

    $default  reduce using rule 3 (local_def_gen)

    func_def       go to state 8
    local_def_gen  go to state 19
    header         go to state 10
    local_def      go to state 11
    func_decl      go to state 12
    var_def        go to state 13


state 12

   23 local_def: func_decl .

    $default  reduce using rule 23 (local_def)


state 13

   24 local_def: var_def .

    $default  reduce using rule 24 (local_def)


state 14

    5 header: "fun" T_id '(' . ')' ':' ret_type
    6       | "fun" T_id '(' . fpar_def fpar_def_gen ')' ':' ret_type

    "ref"  shift, and go to state 20
    T_id   shift, and go to state 21
    ')'    shift, and go to state 22

    fpar_def  go to state 23


state 15

   26 var_def: "var" T_id . comma_id_gen ':' type ';'

    ','  shift, and go to state 24

    $default  reduce using rule 11 (comma_id_gen)

    comma_id_gen  go to state 25


state 16

   40 block: '{' . stmt_list '}'

    $default  reduce using rule 41 (stmt_list)

    stmt_list  go to state 26


state 17

    2 func_def: header local_def_gen block .

    $default  reduce using rule 2 (func_def)


state 18

   25 func_decl: header ';' .

    $default  reduce using rule 25 (func_decl)


state 19

    4 local_def_gen: local_def local_def_gen .

    $default  reduce using rule 4 (local_def_gen)


state 20

    9 fpar_def: "ref" . T_id comma_id_gen ':' fpar_type

    T_id  shift, and go to state 27


state 21

   10 fpar_def: T_id . comma_id_gen ':' fpar_type

    ','  shift, and go to state 24

    $default  reduce using rule 11 (comma_id_gen)

    comma_id_gen  go to state 28


state 22

    5 header: "fun" T_id '(' ')' . ':' ret_type

    ':'  shift, and go to state 29


state 23

    6 header: "fun" T_id '(' fpar_def . fpar_def_gen ')' ':' ret_type

    ';'  shift, and go to state 30

    $default  reduce using rule 7 (fpar_def_gen)

    fpar_def_gen  go to state 31


state 24

   12 comma_id_gen: ',' . T_id comma_id_gen

    T_id  shift, and go to state 32


state 25

   26 var_def: "var" T_id comma_id_gen . ':' type ';'

    ':'  shift, and go to state 33


state 26

   40 block: '{' stmt_list . '}'
   42 stmt_list: stmt_list . stmt

    "if"            shift, and go to state 34
    "return"        shift, and go to state 35
    "while"         shift, and go to state 36
    "writeInteger"  shift, and go to state 37
    "writeString"   shift, and go to state 38
    T_id            shift, and go to state 39
    T_const_string  shift, and go to state 40
    ';'             shift, and go to state 41
    '{'             shift, and go to state 16
    '}'             shift, and go to state 42

    stmt            go to state 43
    block           go to state 44
    func_call_stmt  go to state 45
    l_value         go to state 46


state 27

    9 fpar_def: "ref" T_id . comma_id_gen ':' fpar_type

    ','  shift, and go to state 24

    $default  reduce using rule 11 (comma_id_gen)

    comma_id_gen  go to state 47


state 28

   10 fpar_def: T_id comma_id_gen . ':' fpar_type

    ':'  shift, and go to state 48


state 29

    5 header: "fun" T_id '(' ')' ':' . ret_type

    "char"     shift, and go to state 49
    "int"      shift, and go to state 50
    "nothing"  shift, and go to state 51

    data_type  go to state 52
    ret_type   go to state 53


state 30

    8 fpar_def_gen: ';' . fpar_def fpar_def_gen

    "ref"  shift, and go to state 20
    T_id   shift, and go to state 21

    fpar_def  go to state 54


state 31

    6 header: "fun" T_id '(' fpar_def fpar_def_gen . ')' ':' ret_type

    ')'  shift, and go to state 55


state 32

   12 comma_id_gen: ',' T_id . comma_id_gen

    ','  shift, and go to state 24

    $default  reduce using rule 11 (comma_id_gen)

    comma_id_gen  go to state 56


state 33

   26 var_def: "var" T_id comma_id_gen ':' . type ';'

    "char"  shift, and go to state 49
    "int"   shift, and go to state 50

    data_type  go to state 57
    type       go to state 58


state 34

   31 stmt: "if" . cond "then" stmt
   32     | "if" . cond "then" stmt "else" stmt

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 68
    expr_high       go to state 69
    cond            go to state 70
    cond_high       go to state 71


state 35

   34 stmt: "return" . ';'
   35     | "return" . expr ';'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72
    ';'             shift, and go to state 73

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 74
    expr_high       go to state 69


state 36

   33 stmt: "while" . cond "do" stmt

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 68
    expr_high       go to state 69
    cond            go to state 75
    cond_high       go to state 71


state 37

   36 stmt: "writeInteger" . '(' T_id ')' ';'
   37     | "writeInteger" . '(' "const_int" ')' ';'

    '('  shift, and go to state 76


state 38

   38 stmt: "writeString" . '(' T_id ')' ';'
   39     | "writeString" . '(' T_const_string ')' ';'

    '('  shift, and go to state 77


state 39

   43 func_call_stmt: T_id . '(' ')'
   44               | T_id . '(' expr comma_expr_gen ')'
   49 l_value: T_id .

    '('  shift, and go to state 78

    $default  reduce using rule 49 (l_value)


state 40

   50 l_value: T_const_string .

    $default  reduce using rule 50 (l_value)


state 41

   27 stmt: ';' .

    $default  reduce using rule 27 (stmt)


state 42

   40 block: '{' stmt_list '}' .

    $default  reduce using rule 40 (block)


state 43

   42 stmt_list: stmt_list stmt .

    $default  reduce using rule 42 (stmt_list)


state 44

   29 stmt: block .

    $default  reduce using rule 29 (stmt)


state 45

   30 stmt: func_call_stmt . ';'

    ';'  shift, and go to state 79


state 46

   28 stmt: l_value . "<-" expr ';'
   51 l_value: l_value . '[' expr ']'

    "<-"  shift, and go to state 80
    '['   shift, and go to state 81


state 47

    9 fpar_def: "ref" T_id comma_id_gen . ':' fpar_type

    ':'  shift, and go to state 82


state 48

   10 fpar_def: T_id comma_id_gen ':' . fpar_type

    "char"  shift, and go to state 49
    "int"   shift, and go to state 50

    data_type  go to state 83
    fpar_type  go to state 84


state 49

   14 data_type: "char" .

    $default  reduce using rule 14 (data_type)


state 50

   13 data_type: "int" .

    $default  reduce using rule 13 (data_type)


state 51

   19 ret_type: "nothing" .

    $default  reduce using rule 19 (ret_type)


state 52

   18 ret_type: data_type .

    $default  reduce using rule 18 (ret_type)


state 53

    5 header: "fun" T_id '(' ')' ':' ret_type .

    $default  reduce using rule 5 (header)


state 54

    8 fpar_def_gen: ';' fpar_def . fpar_def_gen

    ';'  shift, and go to state 30

    $default  reduce using rule 7 (fpar_def_gen)

    fpar_def_gen  go to state 85


state 55

    6 header: "fun" T_id '(' fpar_def fpar_def_gen ')' . ':' ret_type

    ':'  shift, and go to state 86


state 56

   12 comma_id_gen: ',' T_id comma_id_gen .

    $default  reduce using rule 12 (comma_id_gen)


state 57

   15 type: data_type . type_gen

    '['  shift, and go to state 87

    $default  reduce using rule 16 (type_gen)

    type_gen  go to state 88


state 58

   26 var_def: "var" T_id comma_id_gen ':' type . ';'

    ';'  shift, and go to state 89


state 59

   75 cond_high: "not" . cond

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 68
    expr_high       go to state 69
    cond            go to state 90
    cond_high       go to state 71


state 60

   45 func_call_expr: T_id . '(' ')'
   46               | T_id . '(' expr comma_expr_gen ')'
   49 l_value: T_id .

    '('  shift, and go to state 91

    $default  reduce using rule 49 (l_value)


state 61

   52 expr: "const_int" .

    $default  reduce using rule 52 (expr)


state 62

   53 expr: T_const_char .

    $default  reduce using rule 53 (expr)


state 63

   63 expr_high: '+' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 92
    expr_high       go to state 69


state 64

   64 expr_high: '-' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 93
    expr_high       go to state 69


state 65

   62 expr_high: '(' . expr ')'
   74 cond_high: '(' . cond ')'

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 94
    expr_high       go to state 69
    cond            go to state 95
    cond_high       go to state 71


state 66

   56 expr: func_call_expr .

    $default  reduce using rule 56 (expr)


state 67

   51 l_value: l_value . '[' expr ']'
   54 expr: l_value .

    '['  shift, and go to state 81

    $default  reduce using rule 54 (expr)


state 68

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   68 cond: expr . '=' expr
   69     | expr . '#' expr
   70     | expr . '>' expr
   71     | expr . '<' expr
   72     | expr . ">=" expr
   73     | expr . "<=" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    ">="   shift, and go to state 98
    "<="   shift, and go to state 99
    '='    shift, and go to state 100
    '#'    shift, and go to state 101
    '>'    shift, and go to state 102
    '<'    shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106


state 69

   55 expr: expr_high .

    $default  reduce using rule 55 (expr)


state 70

   31 stmt: "if" cond . "then" stmt
   32     | "if" cond . "then" stmt "else" stmt
   66 cond: cond . "and" cond
   67     | cond . "or" cond

    "and"   shift, and go to state 107
    "or"    shift, and go to state 108
    "then"  shift, and go to state 109


state 71

   65 cond: cond_high .

    $default  reduce using rule 65 (cond)


state 72

   62 expr_high: '(' . expr ')'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 110
    expr_high       go to state 69


state 73

   34 stmt: "return" ';' .

    $default  reduce using rule 34 (stmt)


state 74

   35 stmt: "return" expr . ';'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ';'    shift, and go to state 111


state 75

   33 stmt: "while" cond . "do" stmt
   66 cond: cond . "and" cond
   67     | cond . "or" cond

    "and"  shift, and go to state 107
    "do"   shift, and go to state 112
    "or"   shift, and go to state 108


state 76

   36 stmt: "writeInteger" '(' . T_id ')' ';'
   37     | "writeInteger" '(' . "const_int" ')' ';'

    T_id         shift, and go to state 113
    "const_int"  shift, and go to state 114


state 77

   38 stmt: "writeString" '(' . T_id ')' ';'
   39     | "writeString" '(' . T_const_string ')' ';'

    T_id            shift, and go to state 115
    T_const_string  shift, and go to state 116


state 78

   43 func_call_stmt: T_id '(' . ')'
   44               | T_id '(' . expr comma_expr_gen ')'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72
    ')'             shift, and go to state 117

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 118
    expr_high       go to state 69


state 79

   30 stmt: func_call_stmt ';' .

    $default  reduce using rule 30 (stmt)


state 80

   28 stmt: l_value "<-" . expr ';'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 119
    expr_high       go to state 69


state 81

   51 l_value: l_value '[' . expr ']'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 120
    expr_high       go to state 69


state 82

    9 fpar_def: "ref" T_id comma_id_gen ':' . fpar_type

    "char"  shift, and go to state 49
    "int"   shift, and go to state 50

    data_type  go to state 83
    fpar_type  go to state 121


state 83

   20 fpar_type: data_type . '[' ']' type_gen
   21          | data_type . type_gen

    '['  shift, and go to state 122

    $default  reduce using rule 16 (type_gen)

    type_gen  go to state 123


state 84

   10 fpar_def: T_id comma_id_gen ':' fpar_type .

    $default  reduce using rule 10 (fpar_def)


state 85

    8 fpar_def_gen: ';' fpar_def fpar_def_gen .

    $default  reduce using rule 8 (fpar_def_gen)


state 86

    6 header: "fun" T_id '(' fpar_def fpar_def_gen ')' ':' . ret_type

    "char"     shift, and go to state 49
    "int"      shift, and go to state 50
    "nothing"  shift, and go to state 51

    data_type  go to state 52
    ret_type   go to state 124


state 87

   17 type_gen: '[' . "const_int" ']' type_gen

    "const_int"  shift, and go to state 125


state 88

   15 type: data_type type_gen .

    $default  reduce using rule 15 (type)


state 89

   26 var_def: "var" T_id comma_id_gen ':' type ';' .

    $default  reduce using rule 26 (var_def)


state 90

   66 cond: cond . "and" cond
   67     | cond . "or" cond
   75 cond_high: "not" cond .

    "and"  shift, and go to state 107
    "or"   shift, and go to state 108

    $default  reduce using rule 75 (cond_high)


state 91

   45 func_call_expr: T_id '(' . ')'
   46               | T_id '(' . expr comma_expr_gen ')'

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72
    ')'             shift, and go to state 126

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 127
    expr_high       go to state 69


state 92

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   63 expr_high: '+' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '*'    shift, and go to state 106

    $default  reduce using rule 63 (expr_high)


state 93

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   64 expr_high: '-' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '*'    shift, and go to state 106

    $default  reduce using rule 64 (expr_high)


state 94

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   62 expr_high: '(' expr . ')'
   68 cond: expr . '=' expr
   69     | expr . '#' expr
   70     | expr . '>' expr
   71     | expr . '<' expr
   72     | expr . ">=" expr
   73     | expr . "<=" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    ">="   shift, and go to state 98
    "<="   shift, and go to state 99
    '='    shift, and go to state 100
    '#'    shift, and go to state 101
    '>'    shift, and go to state 102
    '<'    shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ')'    shift, and go to state 128


state 95

   66 cond: cond . "and" cond
   67     | cond . "or" cond
   74 cond_high: '(' cond . ')'

    "and"  shift, and go to state 107
    "or"   shift, and go to state 108
    ')'    shift, and go to state 129


state 96

   60 expr: expr "div" . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 130
    expr_high       go to state 69


state 97

   61 expr: expr "mod" . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 131
    expr_high       go to state 69


state 98

   72 cond: expr ">=" . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 132
    expr_high       go to state 69


state 99

   73 cond: expr "<=" . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 133
    expr_high       go to state 69


state 100

   68 cond: expr '=' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 134
    expr_high       go to state 69


state 101

   69 cond: expr '#' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 135
    expr_high       go to state 69


state 102

   70 cond: expr '>' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 136
    expr_high       go to state 69


state 103

   71 cond: expr '<' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 137
    expr_high       go to state 69


state 104

   57 expr: expr '+' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 138
    expr_high       go to state 69


state 105

   58 expr: expr '-' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 139
    expr_high       go to state 69


state 106

   59 expr: expr '*' . expr

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 140
    expr_high       go to state 69


state 107

   66 cond: cond "and" . cond

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 68
    expr_high       go to state 69
    cond            go to state 141
    cond_high       go to state 71


state 108

   67 cond: cond "or" . cond

    "not"           shift, and go to state 59
    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 65

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 68
    expr_high       go to state 69
    cond            go to state 142
    cond_high       go to state 71


state 109

   31 stmt: "if" cond "then" . stmt
   32     | "if" cond "then" . stmt "else" stmt

    "if"            shift, and go to state 34
    "return"        shift, and go to state 35
    "while"         shift, and go to state 36
    "writeInteger"  shift, and go to state 37
    "writeString"   shift, and go to state 38
    T_id            shift, and go to state 39
    T_const_string  shift, and go to state 40
    ';'             shift, and go to state 41
    '{'             shift, and go to state 16

    stmt            go to state 143
    block           go to state 44
    func_call_stmt  go to state 45
    l_value         go to state 46


state 110

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   62 expr_high: '(' expr . ')'

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ')'    shift, and go to state 128


state 111

   35 stmt: "return" expr ';' .

    $default  reduce using rule 35 (stmt)


state 112

   33 stmt: "while" cond "do" . stmt

    "if"            shift, and go to state 34
    "return"        shift, and go to state 35
    "while"         shift, and go to state 36
    "writeInteger"  shift, and go to state 37
    "writeString"   shift, and go to state 38
    T_id            shift, and go to state 39
    T_const_string  shift, and go to state 40
    ';'             shift, and go to state 41
    '{'             shift, and go to state 16

    stmt            go to state 144
    block           go to state 44
    func_call_stmt  go to state 45
    l_value         go to state 46


state 113

   36 stmt: "writeInteger" '(' T_id . ')' ';'

    ')'  shift, and go to state 145


state 114

   37 stmt: "writeInteger" '(' "const_int" . ')' ';'

    ')'  shift, and go to state 146


state 115

   38 stmt: "writeString" '(' T_id . ')' ';'

    ')'  shift, and go to state 147


state 116

   39 stmt: "writeString" '(' T_const_string . ')' ';'

    ')'  shift, and go to state 148


state 117

   43 func_call_stmt: T_id '(' ')' .

    $default  reduce using rule 43 (func_call_stmt)


state 118

   44 func_call_stmt: T_id '(' expr . comma_expr_gen ')'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ','    shift, and go to state 149

    $default  reduce using rule 47 (comma_expr_gen)

    comma_expr_gen  go to state 150


state 119

   28 stmt: l_value "<-" expr . ';'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ';'    shift, and go to state 151


state 120

   51 l_value: l_value '[' expr . ']'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ']'    shift, and go to state 152


state 121

    9 fpar_def: "ref" T_id comma_id_gen ':' fpar_type .

    $default  reduce using rule 9 (fpar_def)


state 122

   17 type_gen: '[' . "const_int" ']' type_gen
   20 fpar_type: data_type '[' . ']' type_gen

    "const_int"  shift, and go to state 125
    ']'          shift, and go to state 153


state 123

   21 fpar_type: data_type type_gen .

    $default  reduce using rule 21 (fpar_type)


state 124

    6 header: "fun" T_id '(' fpar_def fpar_def_gen ')' ':' ret_type .

    $default  reduce using rule 6 (header)


state 125

   17 type_gen: '[' "const_int" . ']' type_gen

    ']'  shift, and go to state 154


state 126

   45 func_call_expr: T_id '(' ')' .

    $default  reduce using rule 45 (func_call_expr)


state 127

   46 func_call_expr: T_id '(' expr . comma_expr_gen ')'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ','    shift, and go to state 149

    $default  reduce using rule 47 (comma_expr_gen)

    comma_expr_gen  go to state 155


state 128

   62 expr_high: '(' expr ')' .

    $default  reduce using rule 62 (expr_high)


state 129

   74 cond_high: '(' cond ')' .

    $default  reduce using rule 74 (cond_high)


state 130

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   60     | expr "div" expr .
   61     | expr . "mod" expr

    $default  reduce using rule 60 (expr)


state 131

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   61     | expr "mod" expr .

    $default  reduce using rule 61 (expr)


state 132

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   72 cond: expr ">=" expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 72 (cond)


state 133

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   73 cond: expr "<=" expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 73 (cond)


state 134

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   68 cond: expr '=' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 68 (cond)


state 135

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   69 cond: expr '#' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 69 (cond)


state 136

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   70 cond: expr '>' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 70 (cond)


state 137

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr
   71 cond: expr '<' expr .

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106

    $default  reduce using rule 71 (cond)


state 138

   57 expr: expr . '+' expr
   57     | expr '+' expr .
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '*'    shift, and go to state 106

    $default  reduce using rule 57 (expr)


state 139

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   58     | expr '-' expr .
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '*'    shift, and go to state 106

    $default  reduce using rule 58 (expr)


state 140

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   59     | expr '*' expr .
   60     | expr . "div" expr
   61     | expr . "mod" expr

    $default  reduce using rule 59 (expr)


state 141

   66 cond: cond . "and" cond
   66     | cond "and" cond .
   67     | cond . "or" cond

    "or"  shift, and go to state 108

    $default  reduce using rule 66 (cond)


state 142

   66 cond: cond . "and" cond
   67     | cond . "or" cond
   67     | cond "or" cond .

    $default  reduce using rule 67 (cond)


state 143

   31 stmt: "if" cond "then" stmt .
   32     | "if" cond "then" stmt . "else" stmt

    "else"  shift, and go to state 156

    "else"    [reduce using rule 31 (stmt)]
    $default  reduce using rule 31 (stmt)


state 144

   33 stmt: "while" cond "do" stmt .

    $default  reduce using rule 33 (stmt)


state 145

   36 stmt: "writeInteger" '(' T_id ')' . ';'

    ';'  shift, and go to state 157


state 146

   37 stmt: "writeInteger" '(' "const_int" ')' . ';'

    ';'  shift, and go to state 158


state 147

   38 stmt: "writeString" '(' T_id ')' . ';'

    ';'  shift, and go to state 159


state 148

   39 stmt: "writeString" '(' T_const_string ')' . ';'

    ';'  shift, and go to state 160


state 149

   48 comma_expr_gen: ',' . expr comma_expr_gen

    T_id            shift, and go to state 60
    "const_int"     shift, and go to state 61
    T_const_char    shift, and go to state 62
    T_const_string  shift, and go to state 40
    '+'             shift, and go to state 63
    '-'             shift, and go to state 64
    '('             shift, and go to state 72

    func_call_expr  go to state 66
    l_value         go to state 67
    expr            go to state 161
    expr_high       go to state 69


state 150

   44 func_call_stmt: T_id '(' expr comma_expr_gen . ')'

    ')'  shift, and go to state 162


state 151

   28 stmt: l_value "<-" expr ';' .

    $default  reduce using rule 28 (stmt)


state 152

   51 l_value: l_value '[' expr ']' .

    $default  reduce using rule 51 (l_value)


state 153

   20 fpar_type: data_type '[' ']' . type_gen

    '['  shift, and go to state 87

    $default  reduce using rule 16 (type_gen)

    type_gen  go to state 163


state 154

   17 type_gen: '[' "const_int" ']' . type_gen

    '['  shift, and go to state 87

    $default  reduce using rule 16 (type_gen)

    type_gen  go to state 164


state 155

   46 func_call_expr: T_id '(' expr comma_expr_gen . ')'

    ')'  shift, and go to state 165


state 156

   32 stmt: "if" cond "then" stmt "else" . stmt

    "if"            shift, and go to state 34
    "return"        shift, and go to state 35
    "while"         shift, and go to state 36
    "writeInteger"  shift, and go to state 37
    "writeString"   shift, and go to state 38
    T_id            shift, and go to state 39
    T_const_string  shift, and go to state 40
    ';'             shift, and go to state 41
    '{'             shift, and go to state 16

    stmt            go to state 166
    block           go to state 44
    func_call_stmt  go to state 45
    l_value         go to state 46


state 157

   36 stmt: "writeInteger" '(' T_id ')' ';' .

    $default  reduce using rule 36 (stmt)


state 158

   37 stmt: "writeInteger" '(' "const_int" ')' ';' .

    $default  reduce using rule 37 (stmt)


state 159

   38 stmt: "writeString" '(' T_id ')' ';' .

    $default  reduce using rule 38 (stmt)


state 160

   39 stmt: "writeString" '(' T_const_string ')' ';' .

    $default  reduce using rule 39 (stmt)


state 161

   48 comma_expr_gen: ',' expr . comma_expr_gen
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . "div" expr
   61     | expr . "mod" expr

    "div"  shift, and go to state 96
    "mod"  shift, and go to state 97
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '*'    shift, and go to state 106
    ','    shift, and go to state 149

    $default  reduce using rule 47 (comma_expr_gen)

    comma_expr_gen  go to state 167


state 162

   44 func_call_stmt: T_id '(' expr comma_expr_gen ')' .

    $default  reduce using rule 44 (func_call_stmt)


state 163

   20 fpar_type: data_type '[' ']' type_gen .

    $default  reduce using rule 20 (fpar_type)


state 164

   17 type_gen: '[' "const_int" ']' type_gen .

    $default  reduce using rule 17 (type_gen)


state 165

   46 func_call_expr: T_id '(' expr comma_expr_gen ')' .

    $default  reduce using rule 46 (func_call_expr)


state 166

   32 stmt: "if" cond "then" stmt "else" stmt .

    $default  reduce using rule 32 (stmt)


state 167

   48 comma_expr_gen: ',' expr comma_expr_gen .

    $default  reduce using rule 48 (comma_expr_gen)
